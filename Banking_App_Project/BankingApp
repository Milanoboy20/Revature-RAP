create schema bankApp;

--drop table bankapp.appusers cascade; 


create table bankapp.appUsers  (

	user_ID      SERIAL primary key,	
	user_name    VARCHAR(200),
	user_title   VARCHAR(100),
	user_address VARCHAR(200),
	user_email   VARCHAR(100) unique not null,
	user_phone   VARCHAR	
);

--update bankapp.appusers set user_phone = '4555555556' where user_id = 4;

--ALTER TABLE bankapp.appusers  add COLUMN user_phone varchar(100);

--drop table bankapp.appusers; 

insert into appUsers values ( default ,'Abdul Samad', 'System Admin', 'Woodycrest ave', 'samad@yahoo.com', 9292789621);
insert into appUsers values ( default ,'james', 'Developer', 'river ave', 'john@yahoo.com', 123456789);
insert into appUsers values ( default ,'James Taylor', 'Customer', 'Jerome ave', 'jayt@yahoo.com', '8002003003');
insert into appUsers values ( default ,'Samuel Koi', 'Employee', 'Fordham RD 225', 'sam@hotmail.com', '9292789963');

--update appusers set user_title = 'Teller' where appUsers.user_title = 'Telle';



--drop table bankapp.customers cascade; 
create table bankapp.customers (
	cus_ID  INTEGER references bankapp.login(login_ID) on delete cascade,
	
	cus_stateID VARCHAR(100),
	cus_SS      numeric unique not null
);

insert into bankapp.customers values (3, '1234ABC', 1234);
insert into bankapp.customers values (4, '2345ABC', 5678);

-- delete from bankapp.customers where cus_id = 2;



create sequence accID start with 1000 increment by 2;


--drop table bankapp.accounts cascade;

create table bankapp.accounts(
	acc_ID INTEGER DEFAULT NEXTVAL('accID') PRIMARY key,
	cus_ID INTEGER references bankapp.customers(cus_SS) on delete cascade,
	accType VARCHAR(100) not null,
	startBalance NUMERIC
);

insert into bankapp.accounts values(default, 1234, 'Checking', 550);
insert into bankapp.accounts values(default, 5678, 'Savings', 1000);



--drop table bankapp.activities;
create table bankapp.activities (
	cus_ID   INTEGER references bankapp.customers(cus_SS) on delete cascade,
	acc_ID   INTEGER references bankapp.accounts(acc_ID) on delete cascade,
	activity VARCHAR(300),
	actDate  date
);

insert into bankapp.activities values(5678, 1004, 'Deposited $100.00', current_date);



--drop table bankapp.employees cascade;
create table bankapp.employees (
	emp_ID  INTEGER references bankapp.login(login_ID) on delete cascade,
	-- user_ID INTEGER references bankapp.appUsers(user_ID),
	--constraint empID foreign key(emp_ID) references bankapp.appUsers(user_ID),
	
	emp_title  VARCHAR(100),
	emp_level  VARCHAR(100),
	emp_salary NUMERIC
);

insert into employees values ( 1 , 'Admin', 'Level 5', 500000);
insert into employees values ( 6 , 'Security_Agent', 'Level 1', 60000);
insert into employees values ( 2 , 'Cutomer service', 'Level 3', 175000);



--drop table bankapp.sysadmin cascade;
create table bankapp.sysAdmin (
	admin_ID     INTEGER references bankapp.login(login_ID) on delete cascade,
	-- user_ID      INTEGER references bankapp.appUsers(user_ID),
	--constraint adminID foreign key(admin_ID) references bankapp.appUsers(user_ID),
	
	admin_level  VARCHAR(100),
	admin_salary NUMERIC
);

drop table bankapp.sysadmin;

insert into sysAdmin values (1, 'Level 5', 500000);


--drop table bankapp.login cascade;
create table bankapp.login (
	login_ID serial primary key,
	
	user_ID  INTEGER references bankapp.appUsers(user_ID) on delete cascade,
	username VARCHAR(100),
	psswd    VARCHAR(100)
);

insert into bankapp.login values (default, 1, 'milanoboy', 'milan');
insert into bankapp.login values (default, 3, 'james', 'jt123');
insert into bankapp.login values (default, 5, 'kofi', 'kofi456');
insert into bankapp.login values (default, 2, 'samkoi', 'sam123');



create sequence actID start with 1000 increment by 10;

--drop table bankapp.newaccounts cascade;
create table bankapp.newAccounts(
	actNum  INTEGER DEFAULT NEXTVAL('actID') PRIMARY key,
	activity  VARCHAR(100),
	cus_stateID VARCHAR(100),
	cus_SS     numeric unique not null,
	cus_username VARCHAR(100),
	cus_password VARCHAR(100),
	status VARCHAR(100),
	actDate date 
);


create sequence emp start with 1000 increment by 20;

create table bankapp.newEmp(
	actNum INTEGER DEFAULT NEXTVAL('emp') PRIMARY key,
	activity   VARCHAR(100),
	emp_title  VARCHAR(100),
	emp_level  VARCHAR(100),
	emp_salary numeric,
	emp_username VARCHAR(100),
	emp_password VARCHAR(100),
	status VARCHAR(100),
	actDate date
);
